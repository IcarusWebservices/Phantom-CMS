/* ------------------------------
General variables
------------------------------ */
html {
  --color-primary: #24b37c;
  --color-primary-dark: #1f996a;
  --color-primary-light: #29cc8d;
}

/* ------------------------------------------------------------
# Macro components:
Main standalone UI Components.

Examples include tables and modals.
------------------------------------------------------------ */
/* ------------------------------
1. Tables
------------------------------ */
table {
    position: relative;
    width: 100%;
    margin: 0;
    margin-top: 8px;
    border-collapse: collapse;
    text-align: left;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

thead { background-color: #ddd; }
tbody { background-color: #f6f6f6; }

th:first-child, td:first-child {
    width: 10px;
}

td,th {
    padding: 15px;
    border-bottom: 1px solid #aaa;
}

.action-overlay {
    position: absolute;
    display: none;
    width: 100%;
    left: 0;
    top: 0;
    background-color: var(--color-primary);
    color: #fff;
}

.action-overlay > th:first-child {
    min-width: 20px;
}

.table-actions {
    height: 50px;
    min-width: 75px;
    width: auto;
    padding: 0;
}

.table-actions > * {
    display: inline-block;
    /*padding: calc((50px - 20px) / 2) 0;*/
    height: 20px;
    margin: 0 8px;
    cursor: pointer;
}

.items-selected {
    width: 100%;
}


/* ------------------------------
2. Theme selection polaroids
------------------------------ */
.polaroid-grid {
    width: 100%;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(14rem, 1fr));
    grid-gap: 1rem;
    padding: 1rem 0;
}

.polaroid {
    position: relative;
    text-align: center;
    border-radius: 6px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    transition: transform 200ms ease;
}

.polaroid, .polaroid-top, .polaroid-bottom {
    width: 100%;
}

.polaroid-top {
    height: 8rem;
    background: #36D1DC;
    background: -webkit-linear-gradient(120deg, #5B86E5, #36D1DC);
    background: linear-gradient(120deg, #5B86E5, #36D1DC);
}

.polaroid-bottom {
    padding: 1rem;
    background-color: #fff;
}

.polaroid-content {
    min-width: 0;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}


/* ------------------------------
3. General containers
------------------------------ */
.container {
  margin: 1rem auto;
  padding-left: 15px;
  padding-right: 15px;
  /* Extra large */
  max-width: 1140px;
}

/* Large */
@media only screen and (max-width: 1200px) {
  .container { max-width: 960px; }
}

/* Medium */
@media only screen and (max-width: 992px) {
  .container { max-width: 720px; }
}

/* Small */
@media only screen and (max-width: 768px) {
  .container { max-width: 540px; }
}

/* Extra small */
@media only screen and (max-width: 576px) {
  .container { max-width: 100%; }
}

/* ------------------------------
4. General cards
------------------------------ */
.card {
  position: relative;
  display: inline-block;
  padding: 2rem;
  margin: 1rem 0;
  background-color: #fff;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.card.full { display: block; }
.card p { line-height: 1.5; }
.card h1, .container h2, .container h3 { margin: 0 0 12px 0; }


/* ------------------------------
5. Modals

# Modals consist out of multiple layers:
- The background      .modal
-   The modal itself  .modal-content
-     Close button    .close-modal
-     Modal header    .modal-header
-     Modal body      .modal-body
-     Modal footer    .modal-footer

Use the example below for features like right-aligned action buttons and a circular header icon


HTML Example:
  
  <div class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <i class="fas fa-times close-modal"></i>
        <i class="fas fa-users circle-icon"></i>
      </div>
      <div class="modal-body">
        <p>Enter your content here!</p>
      </div>
      <div class="modal-footer">
        <div class="action">
          <a href="#" class="button semi-rounded outline">Cancel</a>
          <a href="#" class="button semi-rounded">Action</a>
        </div>
      </div>
    </div>
  </div>

------------------------------ */
.modal {
  position: fixed;
  display: none;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  overflow: none;
  background-color: rgb(0,0,0);
  background-color: rgba(0,0,0,0.4);
  z-index: 1000;
  animation: modalFadeIn 200ms ease-out forwards;
}

.modal-content {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  padding: 2rem;
  min-width: 500px;
  min-height: 250px;
  background-color: #fff;
  border-radius: 3px;
  box-shadow: 0 0 8px 0 rgba(0,0,0,.2);
  animation: modalZoom 200ms ease-out forwards;
}

.modal-body {
  padding-top: 1rem;
  padding-bottom: 3rem;
}

.modal-footer {
  position: absolute;
  bottom: 2rem;
  width: calc(100% - 4rem);
}

.modal-footer .action { float: right; }

@keyframes modalZoom {
  0% {opacity: 0;transform: translate(-50%, -50%) scale(0.5);}
  100% {opacity: 1;transform: translate(-50%, -50%) scale(1);}
}
@keyframes modalFadeIn {
  0% {opacity: 0;}
  100% {opacity: 1;}
}

.close-modal {
  float: right;
  font: 32px 'Roboto', sans-serif;
  color: #999;
  transition: 200ms ease;
  cursor: pointer;
}
.close-modal:hover { color: #aaa; }

@media only screen and (max-width: 700px){
  .modal-content {
    width: 100vw;
    height: 100vh;
  }
}


/* ------------------------------------------------------------
# Micro components:
Small standalone UI components.

Examples include buttons, form elements and tags
------------------------------------------------------------*/
/* ------------------------------
1. Tags
------------------------------ */
.tag {
    display: inline-block;
    padding: 6px 1rem;
    font-size: 15px;
    background-color: #888;
    border-radius: 80px;
    text-transform: capitalize;
}
.tag.red { background-color: #D04947; color: #fff; }
.tag.green { background-color: /*#058C42*/#24b37c; color: #fff; }
.tag.blue { background-color: #0078FF; color: #fff; }
.tag.yellow { background-color: #E3B23C; color: #fff; }


/* ------------------------------
2. FontAwesome circle icons
------------------------------ */
.circle-icon {
  position: relative;
  color: #fff;
  margin: 1em;
}

.circle-icon:after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 999px;
  background: var(--color-primary);
  padding-right: 3rem;
  height: 3rem;
  z-index: -1;
}


/* ------------------------------
3. Attention bubbles/badges
------------------------------ */
.badge {
  position: relative;
}

.badge[data-count]:after {
  position: absolute;
  right: -10%;
  top: -30%;
  content: attr(data-count);
  font-family: sans-serif;
  font-size: 40%;
  padding: 0.6em;
  border-radius: 999px;
  line-height: 0.75em;
  color: #fff;
  background: var(--color-primary);
  text-align: center;
  min-width: 2em;
  font-weight: bold;
}


/* ------------------------------
4. Buttons

Example:
<a class="button small rounded purple" href="#">Button</a>
------------------------------ */
.button {
  display: inline-block;
  padding: .7em 1.5em;
  border: none;
  color: #fff;
  font: 15px 'Roboto', sans-serif;
  cursor: pointer;
  transition: background-color 150ms ease-in-out;
  --color-red: #D04947;
  --color-red-dark: #AB3C3B;
  --color-orange: #FF7144;
  --color-orange-dark: #B55836;
  --color-blue: #7196e4;
  --color-blue-dark: #5176c4;
  --color-purple: #725AC1;
  --color-purple-dark: #5E4A9E;
}

/* Shapes */
.button.rounded { border-radius: 35px; }
.button.semi-rounded { border-radius: 6px; }

/* States */
.button.disabled { background-color: #bbb !important;  border: 1px solid #bbb; cursor: default; }
.button.disabled:hover { border-color: #bbb; }

/* Sizes */
.button.small { font-size: 12px; }

/* Colors */
.button { background-color: var(--color-primary); border: 1px solid var(--color-primary); }
.button:hover { background-color: var(--color-primary-dark); border-color: var(--color-primary-dark); }
.button.neutral { background-color: transparent; border: none; color: #212121; }
.button.neutral:hover { color: #414141; }
.button.red { background-color: var(--color-red); border: 1px solid var(--color-red); }
.button.red:hover { background-color: var(--color-red-dark); border-color: var(--color-red-dark); }
.button.orange { background-color: var(--color-orange); border: 1px solid var(--color-orange); }
.button.orange:hover { background-color: var(--color-orange-dark); border-color: var(--color-orange-dark); }
.button.blue { background-color: var(--color-blue); border: 1px solid var(--color-blue); }
.button.blue:hover { background-color: var(--color-blue-dark); border-color: var(--color-blue-dark);}
.button.purple { background-color: var(--color-purple); border: 1px solid var(--color-purple); }
.button.purple:hover { background-color: var(--color-purple-dark); border-color: var(--color-purple-dark); }

/* Outline variants */
.button.outline { color: var(--color-primary); background-color: #fff !important; }
.button.outline:hover { background-color: #eee !important; }
.button.outline.red { color: var(--color-red); }
.button.outline.orange { color: var(--color-orange); }
.button.outline.blue { color: var(--color-blue); }
.button.outline.purple { color: var(--color-purple); }


/* ------------------------------
5. Input styles

+ Most input styles are to be applied onto form elements as a class.
+ The [.form] class is required to indicate you want the form to be styled.

+ All current styles: [.rounded], [.flat]

+ Note that the use of [.field] is only required for the following style(s): [.flat]

HTML Example:
  <form class="form rounded">
    <div class="field">
      <input type="text" name="username" autocomplete="off">
      <label for="username">Username</label>
    </div>

    <input type="email" id="email" name="email" autocomplete="off">
    <label for="email" class="label-name"><span class="content-name">Email</span></label>

    <input type="password" id="password" name="password" autocomplete="new-password">
    <label for="password" class="label-name"><span class="content-name">Password</span></label>
  </form>
------------------------------ */
/* ---------- Rounded ---------- */
.form.rounded input[type=text],
.form.rounded input[type=password],
.form.rounded input[type=email],
.form.rounded textarea {
    display: block;
    width: 100%;
    padding: 10px 20px;
    outline: none;
    border: none;
    border-radius: 35px;
    background-color: rgba(0,0,0,.1);
    color: #333;
    transition: 200ms ease-in-out;
}

.form.rounded input[type=text]:focus,
.form.rounded input[type=text]:hover,
.form.rounded input[type=password]:focus,
.form.rounded input[type=password]:hover,
.form.rounded input[type=email]:focus,
.form.rounded input[type=email]:hover,
.form.rounded textarea {
    background-color: rgba(0,0,0,.15);
}

/* ---------- Flat ---------- */
.form.flat .field {
  position: relative;
  height: 50px;
  overflow: hidden;
}

.form.flat.narrow .field { max-width: 300px; }

.form.flat .field input {
  padding: 18px 0 0 0;
  border-radius: 0;
  width: 100%;
  height: 100%;
  padding-top: 18px;
  font-size: 18px;
  color: #333;
  background-color: transparent;
  border: none;
  outline: none;
}

.form.flat .field label {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-bottom: 1px solid #333;
  pointer-events: none;
}

.form.flat .field label::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -2px;
  height: 100%;
  width: 100%;
  border-bottom: 3px solid var(--color-primary);
  transform: translateX(-100%);
  transition: transform 300ms ease;
}

.form.flat .field label span {
  position: absolute;
  bottom: 5px;
  left: 0;
  color: #333;
  transform-origin: top left;
  transition: all 300ms ease;
}

/* Styling when the form is active */
.form.flat .field input:focus + label span { transform: translateY(-70%) scale(0.8); color: var(--color-primary); }
.form.flat .field input:not(:placeholder-shown) + label span { transform: translateY(-70%) scale(0.8); }
.form.flat .field input:focus + label::after { transform: translateX(0); }

.form.flat.placeholders .field label span { transform: translateY(-70%) scale(0.8); }

/* Input-based */
input {
    display: inline-block;
    padding: 8px 12px;
    outline: none;
    border: 1px solid #aaa;;
    border-radius: 6px;
    color: #333;
    transition: 200ms ease-in-out;
}

input:hover,
input:focus {
    border-color: var(--color-primary);
}


/* ------------------------------
6. Radio buttons
------------------------------ */
.control {
  display: block;
  position: relative;
  padding-left: 30px;
  cursor: pointer;
}
.control input {
  position: absolute;
  z-index: -1;
  opacity: 0;
}
.control-indicator {
  position: absolute;
  top: 2px;
  left: 0;
  height: 20px;
  width: 20px;
  background: #bbb;
}
.control-radio .control-indicator { border-radius: 50%;}
.control:hover input ~ .control-indicator { background: #aaa;}
.control input:checked ~ .control-indicator { background: var(--color-primary);}
.control input:disabled ~ .control-indicator { background: #e6e6e6; opacity: 0.6; pointer-events: none;}
.control-indicator:after {content: ''; position: absolute; display: none;}
.control input:checked ~ .control-indicator:after { display: block;}
.control-checkbox .control-indicator:after {
  left: 7.5px;
  top: 4px;
  width: 3px;
  height: 8px;
  border: solid #fff;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}
.control-checkbox input:disabled ~ .control-indicator:after { border-color: #7b7b7b;}
.control-radio .control-indicator:after {
  left: 7px;
  top: 7px;
  height: 6px;
  width: 6px;
  border-radius: 50%;
  background: #fff;
}
.control-radio input:disabled ~ .control-indicator:after { background: #7b7b7b;}

/* Control exceptions */
table.selectable .control { display: initial; padding-left: 0;}
table.selectable .control-indicator { position: static;}
